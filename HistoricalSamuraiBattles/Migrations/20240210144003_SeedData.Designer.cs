// <auto-generated />
using System;
using HSB.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HistoricalSamuraiBattles.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240210144003_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BattleHorse", b =>
                {
                    b.Property<Guid>("BattlesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HorsesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BattlesId", "HorsesId");

                    b.HasIndex("HorsesId");

                    b.ToTable("BattleHorse");

                    b.HasData(
                        new
                        {
                            BattlesId = new Guid("021ca3c1-0deb-4afd-ae94-2159a8479811"),
                            HorsesId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870")
                        },
                        new
                        {
                            BattlesId = new Guid("021ca3c1-0deb-4afd-ae94-2159a8479811"),
                            HorsesId = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3")
                        });
                });

            modelBuilder.Entity("BattleSamurai", b =>
                {
                    b.Property<Guid>("BattlesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SamuraisId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BattlesId", "SamuraisId");

                    b.HasIndex("SamuraisId");

                    b.ToTable("BattleSamurai");

                    b.HasData(
                        new
                        {
                            BattlesId = new Guid("021ca3c1-0deb-4afd-ae94-2159a8479811"),
                            SamuraisId = new Guid("80abbca8-664d-4b20-b5de-024705497d4a")
                        },
                        new
                        {
                            BattlesId = new Guid("021ca3c1-0deb-4afd-ae94-2159a8479811"),
                            SamuraisId = new Guid("86dba8c0-d178-41e7-938c-ed49778fb52a")
                        });
                });

            modelBuilder.Entity("HSB.Domain.Entities.Battle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Battles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("021ca3c1-0deb-4afd-ae94-2159a8479811"),
                            Date = new DateTime(2023, 10, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Gaza",
                            Name = "Tofan Al-Aqsa"
                        });
                });

            modelBuilder.Entity("HSB.Domain.Entities.Horse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Horses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Color = 0,
                            Height = 2.1000000000000001,
                            Name = "Black Horse"
                        },
                        new
                        {
                            Id = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3"),
                            Color = 1,
                            Height = 2.5,
                            Name = "White Horse"
                        });
                });

            modelBuilder.Entity("HSB.Domain.Entities.Samurai", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HorseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HorseId");

                    b.ToTable("Samurais");

                    b.HasData(
                        new
                        {
                            Id = new Guid("80abbca8-664d-4b20-b5de-024705497d4a"),
                            HorseId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Name = "Warrior Samurai",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("86dba8c0-d178-41e7-938c-ed49778fb52a"),
                            HorseId = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3"),
                            Name = "Trojan Samurai",
                            Type = 2
                        });
                });

            modelBuilder.Entity("BattleHorse", b =>
                {
                    b.HasOne("HSB.Domain.Entities.Battle", null)
                        .WithMany()
                        .HasForeignKey("BattlesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HSB.Domain.Entities.Horse", null)
                        .WithMany()
                        .HasForeignKey("HorsesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BattleSamurai", b =>
                {
                    b.HasOne("HSB.Domain.Entities.Battle", null)
                        .WithMany()
                        .HasForeignKey("BattlesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HSB.Domain.Entities.Samurai", null)
                        .WithMany()
                        .HasForeignKey("SamuraisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HSB.Domain.Entities.Samurai", b =>
                {
                    b.HasOne("HSB.Domain.Entities.Horse", "Horse")
                        .WithMany()
                        .HasForeignKey("HorseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Horse");
                });
#pragma warning restore 612, 618
        }
    }
}
